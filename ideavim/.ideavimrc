" .ideavimrc is a configuration file for IdeaVim plugin. It uses
"   the same commands as the original .vimrc configuration.
" You can find a list of commands here: https://jb.gg/h38q75
" Find more examples here: https://jb.gg/share-ideavimrc

" Converts string date into bson extended format:
" "2022-03-03T11:04:00.047Z" --> {"$date": "2022-03-03T11:04:00.047Z"}
let @d = "0f\";;da\"i{\"$date\":<ESC>p"

"" -- Suggested options --
" Show a few lines of context around the cursor. Note that this makes the
" text scroll if you mouse-click near the start or end of the window.

unmap `
let mapleader = " "
noremap <leader>,e :edit ~/.ideavimrc<CR>
nnoremap <leader>,r :action IdeaVim.ReloadVimRc.reload<CR>

" Do incremental searching.
set ideamarks
set matchit
set ideajoin
set idearefactormode=keep
set scrolloff=10
set relativenumber
set number
set showmode
set showcmd
set visualbell
set clipboard+=unnamed
set surround
se  ignorecase
set smartcase
set incsearch
set hlsearch
set highlightedyank
set which-key
set nerdtree
set quickscope
" Don't use Ex mode, use Q for formatting.
map Q gq
nnoremap \\ :noh<CR>

" --- Enable IdeaVim plugins https://jb.gg/ideavim-plugins

" Highlight copied text
Plug 'machakann/vim-highlightedyank'
" Commentary plugin
Plug 'tpope/vim-commentary'
Plug 'vim-scripts/argtextobj.vim'
let g:argtextobj_pairs="[:],(:),<:>"

nmap <C-t> <Action>(ActivateTerminalToolWindow)
nmap <C-f> <Action>($LRU)
nmap <C-o> :action Back<CR>
nmap <C-i> :action Forward<CR>
" Popup navigation
"inoremap <C-j> <Action>(PopupMenu-selectNext)
"inoremap <C-k> <Action>(PopupMenu-selectPrev)
inoremap <C-k> :action ParameterInfo<CR>
"inoremap <C-n> <Action>(PopupMenu-selectNext)
"noremap <C-p> <Action>(PopupMenu-selectPrev)
"map <C-n> <ESC>:action HippieCompletion<CR>a
"map <C-p> <ESC>:action HippieBackwardCompletion<CR>a

" Handled by Idea is better
" nmap <C-h> <Action>(HideActiveWindow)


" Open NERDTree (use q to exit)
map <leader>e :NERDTree<CR>
nmap <leader>vd <Action>(Vcs.ShowDiffChangedLines)<CR>
nmap <leader>vr <Action>(Vcs.RollbackChangedLines)<CR>

map <leader>q <Action>(QuickActionsPopup)<CR>
" Comment lines
map <leader>/ <Action>(CommentByLineComment)
map <leader><leader> <Action>(Switcher)
" Like buffers in vim
map <leader>b <Action>(Switcher)

" Refactoring
map <leader>rn <Action>(RenameElement)
map <leader>rm <Action>(ExtractMethod)
map <leader>rv <Action>(IntroduceVariable)
map <leader>rf <Action>(IntroduceField)
map <leader>rs <Action>(ChangeSignature)
map <leader>rr <Action>(Refactorings.QuickListPopupAction)

" Go to code
" why "gc" take slower in this case?
map <leader>f <Action>(GotoFile)<CR>
map <leader>sf <Action>(GotoFile)<CR>
" map <leader>fg <Action>(TextSearchAction)<CR>
map <leader>sg <Action>(TextSearchAction)<CR>
map <leader>ds <Action>(FileStructurePopup)
map <leader>c <Action>(GotoClass)<CR>
nmap <leader>gy <Action>(GotoTypeDeclaration)
nmap <leader>gi <Action>(GotoImplementation)
nmap <leader>gu <Action>(ShowUsages)
nmap gr <Action>(ShowUsages)
nmap <leader>gt <Action>(GotoTest)
nmap <leader>gf <Action>(Back)
nmap <leader>gb <Action>(Forward)

" Easy visual indentation
vnoremap < <gv
vnoremap > >gv

nnoremap ge :action GotoNextError<CR>
nnoremap gE :action GotoPreviousError<CR>

xnoremap \r :action Console.Jdbc.Execute<CR>
nnoremap \r :action RunClass<CR>
nnoremap \d :action DebugClass<CR>
nnoremap \u :action Rerun<CR>
nnoremap \b :action ToggleLineBreakpoint<CR>

nnoremap \f :action ChooseRunConfiguration<CR>
nnoremap \t :action ActivateRunToolWindow<CR>

nnoremap ==  :action ReformatCode<CR>
nnoremap =o :action OptimizeImports<CR>
